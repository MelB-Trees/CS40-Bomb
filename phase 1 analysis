0000000000401036 <main>:
...
401083:	e8 7d 09 00 00       	callq  401a05 <read_line>
  401088:	48 89 c7             	mov    %rax,%rdi                       \* %rdi makes the input an argument for <phase_1>?
  40108b:	e8 e2 00 00 00       	callq  401172 <phase_1>
...


0000000000401172 <phase_1>:
  401172:	48 83 ec 08          	sub    $0x8,%rsp                      \* what does %rsp hold?
  401176:	be 60 1d 40 00       	mov    $0x401d60,%esi
  40117b:	e8 9f 03 00 00       	callq  40151f <strings_not_equal>     \* I think it's using $esi, which is set to the value of 0x401d60?
  401180:	85 c0                	test   %eax,%eax
  401182:	75 05                	jne    401189 <phase_1+0x17>          \* if the jne coondition is met, jumps to "callq <explode_bomb>" 
                                                                       * where is this condition obtained? I'm guessing <strings_not_equal> 
                                                                       * modifies the value of %eax, looking to see if it equals 0?
                                                                       * jne: jump if NOT equal to zero
                                                                       *\
  401184:	48 83 c4 08          	add    $0x8,%rsp
  401188:	c3                   	retq                                  \* return, exits function *\
  401189:	e8 02 08 00 00       	callq  401990 <explode_bomb>
  40118e:	eb f4                	jmp    401184 <phase_1+0x12>

  000000000040151f <strings_not_equal>:
  40151f:	41 54                	push   %r12
  401521:	55                   	push   %rbp
  401522:	53                   	push   %rbx
  401523:	48 89 fb             	mov    %rdi,%rbx
  401526:	48 89 f5             	mov    %rsi,%rbp
  401529:	e8 d4 ff ff ff       	callq  401502 <string_length>
  40152e:	41 89 c4             	mov    %eax,%r12d
  401531:	48 89 ef             	mov    %rbp,%rdi
  401534:	e8 c9 ff ff ff       	callq  401502 <string_length>
  401539:	89 c2                	mov    %eax,%edx
  40153b:	b8 01 00 00 00       	mov    $0x1,%eax
  401540:	41 39 d4             	cmp    %edx,%r12d
  401543:	75 31                	jne    401576 <strings_not_equal+0x57>
  401545:	0f b6 13             	movzbl (%rbx),%edx
  401548:	84 d2                	test   %dl,%dl
  40154a:	74 1e                	je     40156a <strings_not_equal+0x4b>
  40154c:	b8 00 00 00 00       	mov    $0x0,%eax
  401551:	38 54 05 00          	cmp    %dl,0x0(%rbp,%rax,1)
  401555:	75 1a                	jne    401571 <strings_not_equal+0x52>
  401557:	48 83 c0 01          	add    $0x1,%rax
  40155b:	0f b6 14 03          	movzbl (%rbx,%rax,1),%edx
  40155f:	84 d2                	test   %dl,%dl
  401561:	75 ee                	jne    401551 <strings_not_equal+0x32>
  401563:	b8 00 00 00 00       	mov    $0x0,%eax
  401568:	eb 0c                	jmp    401576 <strings_not_equal+0x57>
  40156a:	b8 00 00 00 00       	mov    $0x0,%eax
  40156f:	eb 05                	jmp    401576 <strings_not_equal+0x57>
  401571:	b8 01 00 00 00       	mov    $0x1,%eax
  401576:	5b                   	pop    %rbx
  401577:	5d                   	pop    %rbp
  401578:	41 5c                	pop    %r12
  40157a:	c3                   	retq 
