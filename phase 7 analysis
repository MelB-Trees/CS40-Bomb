000000000040143d <secret_phase>:
  40143d:	53                   	push   %rbx
  40143e:	e8 c2 05 00 00       	callq  401a05 <read_line>
  401443:	48 89 c7             	mov    %rax,%rdi
  401446:	ba 0a 00 00 00       	mov    $0xa,%edx
  40144b:	be 00 00 00 00       	mov    $0x0,%esi
  401450:	e8 0b fa ff ff       	callq  400e60 <strtol@plt>
  401455:	89 c3                	mov    %eax,%ebx
  401457:	83 e8 01             	sub    $0x1,%eax
  40145a:	3d e8 03 00 00       	cmp    $0x3e8,%eax
  40145f:	77 22                	ja     401483 <secret_phase+0x46>
  401461:	89 de                	mov    %ebx,%esi
  401463:	bf 40 41 60 00       	mov    $0x604140,%edi
  401468:	e8 93 ff ff ff       	callq  401400 <fun7>
  40146d:	83 f8 02             	cmp    $0x2,%eax
  401470:	75 18                	jne    40148a <secret_phase+0x4d>
  401472:	bf 88 1d 40 00       	mov    $0x401d88,%edi
  401477:	e8 04 f9 ff ff       	callq  400d80 <puts@plt>
  40147c:	e8 64 06 00 00       	callq  401ae5 <phase_defused>
  401481:	5b                   	pop    %rbx
  401482:	c3                   	retq   
  401483:	e8 08 05 00 00       	callq  401990 <explode_bomb>
  401488:	eb d7                	jmp    401461 <secret_phase+0x24>
  40148a:	e8 01 05 00 00       	callq  401990 <explode_bomb>
  40148f:	eb e1                	jmp    401472 <secret_phase+0x35>

0000000000401400 <fun7>:
  401400:	48 85 ff             	test   %rdi,%rdi /* while rdi isn't 0 */ 

  401403:	74 32                	je     401437 <fun7+0x37>
  401405:	48 83 ec 08          	sub    $0x8,%rsp
  401409:	8b 17                	mov    (%rdi),%edx

  40140b:	39 f2                	cmp    %esi,%edx   /* keeps moving down binary tree from node 1 until node with closest value to input is found, or leaf*/
  40140d:	7f 0c                	jg     40141b <fun7+0x1b>
  40140f:	b8 00 00 00 00       	mov    $0x0,%eax /* if larger node is found, reset eax to 0 */
  401414:	75 12                	jne    401428 <fun7+0x28> 
  401416:	48 83 c4 08          	add    $0x8,%rsp
  40141a:	c3                   	retq   /* breaks while loop */

  40141b:	48 8b 7f 08          	mov    0x8(%rdi),%rdi /* if curr node is greater than input, go down first node (smaller value)
  40141f:	e8 dc ff ff ff       	callq  401400 <fun7>

  401424:	01 c0                	add    %eax,%eax /* doubles value of eax, goes here after end  */ 
  401426:	eb ee                	jmp    401416 <fun7+0x16>

  401428:	48 8b 7f 10          	mov    0x10(%rdi),%rdi /* if curr node is less than input, go down second node (greater value)
  40142c:	e8 cf ff ff ff       	callq  401400 <fun7>

  401431:	8d 44 00 01          	lea    0x1(%rax,%rax,1),%eax /* sets eax to either 1 or -1? */ 
  401435:	eb df                	jmp    401416 <fun7+0x16>

  401437:	b8 ff ff ff ff       	mov    $0xffffffff,%eax /* eax is set to -1 */ 
  40143c:	c3                   	retq   /* goes to 401424 */
